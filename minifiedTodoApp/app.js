const note=document.getElementById('notifications');let db;let newItem=[{taskTitle:"",hours:0,minutes:0,day:0,month:"",year:0,notified:"no"}];const taskList=document.getElementById('task-list');const taskForm=document.getElementById('task-form');const title=document.getElementById('title');const hours=document.getElementById('deadline-hours');const minutes=document.getElementById('deadline-minutes');const day=document.getElementById('deadline-day');const month=document.getElementById('deadline-month');const year=document.getElementById('deadline-year');const submit=document.getElementById('submit');const notificationBtn=document.getElementById('enable');if(Notification.permission==='denied'||Notification.permission==='default'){notificationBtn.style.display='block'}else{notificationBtn.style.display='none'}
window.onload=function(){note.innerHTML+='<li>App initialised.</li>';window.indexedDB=window.indexedDB||window.mozIndexedDB||window.webkitIndexedDB||window.msIndexedDB;let checkDB=window.indexedDB?console.log("IndexedDB supported by this browser"):alert("IndexedDB NOT supported by your browser !!");window.IDBTransaction=window.IDBTransaction||window.webkitIDBTransaction||window.msIDBTransaction;window.IDBKeyRange=window.IDBKeyRange||window.webkitIDBKeyRange||window.msIDBKeyRange;const DBOpenRequest=window.indexedDB.open("toDoList",4);DBOpenRequest.onerror=function(event){note.innerHTML+='<li>Error loading database.</li>'};DBOpenRequest.onsuccess=function(event){note.innerHTML+='<li>Database initialised.</li>';db=DBOpenRequest.result;displayData()};DBOpenRequest.onupgradeneeded=function(event){let db=event.target.result;db.onerror=function(event){note.innerHTML+='<li>Error loading database.</li>'};let objectStore=db.createObjectStore("toDoList",{keyPath:"taskTitle"});objectStore.createIndex("hours","hours",{unique:!1});objectStore.createIndex("minutes","minutes",{unique:!1});objectStore.createIndex("day","day",{unique:!1});objectStore.createIndex("month","month",{unique:!1});objectStore.createIndex("year","year",{unique:!1});objectStore.createIndex("notified","notified",{unique:!1});note.innerHTML+='<li>Object store created.</li>'};function displayData(){taskList.innerHTML="";let objectStore=db.transaction('toDoList').objectStore('toDoList');objectStore.openCursor().onsuccess=function(event){let cursor=event.target.result;if(cursor){const listItem=document.createElement('li');if(cursor.value.day==1||cursor.value.day==21||cursor.value.day==31){daySuffix="st"}else if(cursor.value.day==2||cursor.value.day==22){daySuffix="nd"}else if(cursor.value.day==3||cursor.value.day==23){daySuffix="rd"}else{daySuffix="th"}
listItem.innerHTML=`${ cursor.value.taskTitle } - ${ cursor.value.hours } : ${ cursor.value.minutes }, ${ cursor.value.month } ${cursor.value.day} ${daySuffix} ${cursor.value.year}.`;if(cursor.value.notified=="yes"){listItem.style.textDecoration="line-through";listItem.style.color="rgba(255,0,0,0.5)"}
taskList.appendChild(listItem);const deleteButton=document.createElement('button');listItem.appendChild(deleteButton);deleteButton.innerHTML='âœ–';deleteButton.style.color='red';deleteButton.style.float='right';deleteButton.setAttribute('data-task',cursor.value.taskTitle);deleteButton.onclick=function(event){deleteItem(event)}
cursor.continue()}else{note.innerHTML+='<li>Entries all displayed.</li>'}}}
taskForm.addEventListener('submit',addData,!1);function addData(e){e.preventDefault();if(title.value==''||hours.value==null||minutes.value==null||day.value==''||month.value==''||year.value==null){note.innerHTML+='<li>Data not submitted â€” form incomplete.</li>';return}else{let newItem=[{taskTitle:title.value,hours:hours.value,minutes:minutes.value,day:day.value,month:month.value,year:year.value,notified:"no"}];let transaction=db.transaction(["toDoList"],"readwrite");transaction.oncomplete=function(){note.innerHTML+='<li>Transaction completed: database modification finished.</li>';displayData()};transaction.onerror=function(){note.innerHTML+='<li>Transaction not opened due to error: '+transaction.error+'</li>'};let objectStore=transaction.objectStore("toDoList");console.log(objectStore.indexNames);console.log(objectStore.keyPath);console.log(objectStore.name);console.log(objectStore.transaction);console.log(objectStore.autoIncrement);let objectStoreRequest=objectStore.add(newItem[0]);objectStoreRequest.onsuccess=function(event){note.innerHTML+='<li>Request successful.</li>';title.value='';hours.value=null;minutes.value=null;day.value=01;month.value='January';year.value=2021}}};function deleteItem(event){let dataTask=event.target.getAttribute('data-task');let transaction=db.transaction(["toDoList"],"readwrite");let request=transaction.objectStore("toDoList").delete(dataTask);transaction.oncomplete=function(){event.target.parentNode.parentNode.removeChild(event.target.parentNode);note.innerHTML+='<li>Task \"'+dataTask+'\" deleted.</li>'}};function checkDeadlines(){if(Notification.permission==='denied'||Notification.permission==='default'){notificationBtn.style.display='block'}else{notificationBtn.style.display='none'}
const now=new Date();const minuteCheck=now.getMinutes();const hourCheck=now.getHours();const dayCheck=now.getDate();const monthCheck=now.getMonth();const yearCheck=now.getFullYear();let objectStore=db.transaction(['toDoList'],"readwrite").objectStore('toDoList');objectStore.openCursor().onsuccess=function(event){let cursor=event.target.result;if(cursor){switch(cursor.value.month){case "January":var monthNumber=0;break;case "February":var monthNumber=1;break;case "March":var monthNumber=2;break;case "April":var monthNumber=3;break;case "May":var monthNumber=4;break;case "June":var monthNumber=5;break;case "July":var monthNumber=6;break;case "August":var monthNumber=7;break;case "September":var monthNumber=8;break;case "October":var monthNumber=9;break;case "November":var monthNumber=10;break;case "December":var monthNumber=11;break;default:alert('Incorrect month entered in database.')}
if(+(cursor.value.hours)==hourCheck&&+(cursor.value.minutes)==minuteCheck&&+(cursor.value.day)==dayCheck&&monthNumber==monthCheck&&cursor.value.year==yearCheck&&cursor.value.notified=="no"){if(Notification.permission==='granted'){createNotification(cursor.value.taskTitle)}}
cursor.continue()}}}
function askNotificationPermission(){function handlePermission(permission){if(!('permission' in Notification)){Notification.permission=permission}
if(Notification.permission==='denied'||Notification.permission==='default'){notificationBtn.style.display='block'}else{notificationBtn.style.display='none'}}
if(!"Notification" in window){console.log("This browser does not support notifications.")}else{if(checkNotificationPromise()){Notification.requestPermission().then((permission)=>{handlePermission(permission)})}else{Notification.requestPermission(function(permission){handlePermission(permission)})}}}
function checkNotificationPromise(){try{Notification.requestPermission().then()}catch(e){return!1}
return!0}
notificationBtn.addEventListener('click',askNotificationPermission);function createNotification(title){let img='ðŸ””';let text='HEY! Your task "'+title+'" is now overdue.';let notification=new Notification('To do list',{body:text,icon:img});let objectStore=db.transaction(['toDoList'],"readwrite").objectStore('toDoList');let objectStoreTitleRequest=objectStore.get(title);objectStoreTitleRequest.onsuccess=function(){let data=objectStoreTitleRequest.result;data.notified="yes";let updateTitleRequest=objectStore.put(data);updateTitleRequest.onsuccess=function(){displayData()}}}
setInterval(checkDeadlines,1000)}
setInterval(()=>{let time=document.querySelector('#time');let today=new Date().toLocaleString();time.style.fontSize='1.15rem';time.style.float='right';time.style.padding='0.89vw';time.style.color='blue';time.textContent=today},1000)